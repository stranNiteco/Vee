//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/work/Vee/Vee\Vee.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="VeeParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface IVeeListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoot([NotNull] VeeParser.RootContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoot([NotNull] VeeParser.RootContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>init</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInit([NotNull] VeeParser.InitContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>init</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInit([NotNull] VeeParser.InitContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>logicalNot</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalNot([NotNull] VeeParser.LogicalNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalNot</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalNot([NotNull] VeeParser.LogicalNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>access</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccess([NotNull] VeeParser.AccessContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>access</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccess([NotNull] VeeParser.AccessContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>test</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTest([NotNull] VeeParser.TestContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>test</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTest([NotNull] VeeParser.TestContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unary</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary([NotNull] VeeParser.UnaryContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unary</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary([NotNull] VeeParser.UnaryContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicative</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicative([NotNull] VeeParser.MultiplicativeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicative</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicative([NotNull] VeeParser.MultiplicativeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>list</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList([NotNull] VeeParser.ListContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>list</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList([NotNull] VeeParser.ListContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>comparision</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparision([NotNull] VeeParser.ComparisionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comparision</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparision([NotNull] VeeParser.ComparisionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>grouping</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrouping([NotNull] VeeParser.GroupingContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>grouping</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrouping([NotNull] VeeParser.GroupingContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>logical</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogical([NotNull] VeeParser.LogicalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>logical</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogical([NotNull] VeeParser.LogicalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>operatorLambda</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperatorLambda([NotNull] VeeParser.OperatorLambdaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>operatorLambda</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperatorLambda([NotNull] VeeParser.OperatorLambdaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>additive</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditive([NotNull] VeeParser.AdditiveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>additive</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditive([NotNull] VeeParser.AdditiveContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>tuple</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTuple([NotNull] VeeParser.TupleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>tuple</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTuple([NotNull] VeeParser.TupleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exponentiation</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExponentiation([NotNull] VeeParser.ExponentiationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exponentiation</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExponentiation([NotNull] VeeParser.ExponentiationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lambda</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambda([NotNull] VeeParser.LambdaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lambda</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambda([NotNull] VeeParser.LambdaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>invocation</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInvocation([NotNull] VeeParser.InvocationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>invocation</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInvocation([NotNull] VeeParser.InvocationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>record</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecord([NotNull] VeeParser.RecordContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>record</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecord([NotNull] VeeParser.RecordContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>variable</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] VeeParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>variable</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] VeeParser.VariableContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pipe</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPipe([NotNull] VeeParser.PipeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pipe</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPipe([NotNull] VeeParser.PipeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>value</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] VeeParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>value</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] VeeParser.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>equality</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquality([NotNull] VeeParser.EqualityContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>equality</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquality([NotNull] VeeParser.EqualityContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>hash</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHash([NotNull] VeeParser.HashContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>hash</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHash([NotNull] VeeParser.HashContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeof</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeof([NotNull] VeeParser.TypeofContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeof</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeof([NotNull] VeeParser.TypeofContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>combination</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCombination([NotNull] VeeParser.CombinationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>combination</c>
	/// labeled alternative in <see cref="VeeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCombination([NotNull] VeeParser.CombinationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.conditions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditions([NotNull] VeeParser.ConditionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.conditions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditions([NotNull] VeeParser.ConditionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] VeeParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] VeeParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.patterns"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPatterns([NotNull] VeeParser.PatternsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.patterns"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPatterns([NotNull] VeeParser.PatternsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.match"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMatch([NotNull] VeeParser.MatchContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.match"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMatch([NotNull] VeeParser.MatchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.pattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPattern([NotNull] VeeParser.PatternContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.pattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPattern([NotNull] VeeParser.PatternContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] VeeParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] VeeParser.ConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.nameOrConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameOrConstant([NotNull] VeeParser.NameOrConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.nameOrConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameOrConstant([NotNull] VeeParser.NameOrConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.typePattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypePattern([NotNull] VeeParser.TypePatternContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.typePattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypePattern([NotNull] VeeParser.TypePatternContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.listPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListPattern([NotNull] VeeParser.ListPatternContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.listPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListPattern([NotNull] VeeParser.ListPatternContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.mapPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMapPattern([NotNull] VeeParser.MapPatternContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.mapPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMapPattern([NotNull] VeeParser.MapPatternContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.mapPairPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMapPairPattern([NotNull] VeeParser.MapPairPatternContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.mapPairPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMapPairPattern([NotNull] VeeParser.MapPairPatternContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.recordPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecordPattern([NotNull] VeeParser.RecordPatternContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.recordPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecordPattern([NotNull] VeeParser.RecordPatternContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.recPairPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecPairPattern([NotNull] VeeParser.RecPairPatternContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.recPairPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecPairPattern([NotNull] VeeParser.RecPairPatternContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.tuplePattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTuplePattern([NotNull] VeeParser.TuplePatternContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.tuplePattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTuplePattern([NotNull] VeeParser.TuplePatternContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.tupleItemPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleItemPattern([NotNull] VeeParser.TupleItemPatternContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.tupleItemPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleItemPattern([NotNull] VeeParser.TupleItemPatternContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.enumPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumPattern([NotNull] VeeParser.EnumPatternContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.enumPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumPattern([NotNull] VeeParser.EnumPatternContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.rest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRest([NotNull] VeeParser.RestContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.rest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRest([NotNull] VeeParser.RestContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.operators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperators([NotNull] VeeParser.OperatorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.operators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperators([NotNull] VeeParser.OperatorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMember([NotNull] VeeParser.MemberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMember([NotNull] VeeParser.MemberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.binaryOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryOperators([NotNull] VeeParser.BinaryOperatorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.binaryOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryOperators([NotNull] VeeParser.BinaryOperatorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.unaryOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryOperators([NotNull] VeeParser.UnaryOperatorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.unaryOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryOperators([NotNull] VeeParser.UnaryOperatorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.nums"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNums([NotNull] VeeParser.NumsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.nums"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNums([NotNull] VeeParser.NumsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.recordPair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecordPair([NotNull] VeeParser.RecordPairContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.recordPair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecordPair([NotNull] VeeParser.RecordPairContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.mapPair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMapPair([NotNull] VeeParser.MapPairContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.mapPair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMapPair([NotNull] VeeParser.MapPairContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.lambdaParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaParams([NotNull] VeeParser.LambdaParamsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.lambdaParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaParams([NotNull] VeeParser.LambdaParamsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.listItems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListItems([NotNull] VeeParser.ListItemsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.listItems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListItems([NotNull] VeeParser.ListItemsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] VeeParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] VeeParser.ArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] VeeParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] VeeParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeGroup</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeGroup([NotNull] VeeParser.TypeGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeGroup</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeGroup([NotNull] VeeParser.TypeGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>singleType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleType([NotNull] VeeParser.SingleTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>singleType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleType([NotNull] VeeParser.SingleTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parameterizedType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterizedType([NotNull] VeeParser.ParameterizedTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parameterizedType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterizedType([NotNull] VeeParser.ParameterizedTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unknownType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnknownType([NotNull] VeeParser.UnknownTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unknownType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnknownType([NotNull] VeeParser.UnknownTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>sumType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSumType([NotNull] VeeParser.SumTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sumType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSumType([NotNull] VeeParser.SumTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>productType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProductType([NotNull] VeeParser.ProductTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>productType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProductType([NotNull] VeeParser.ProductTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncType([NotNull] VeeParser.FuncTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcType</c>
	/// labeled alternative in <see cref="VeeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncType([NotNull] VeeParser.FuncTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeName([NotNull] VeeParser.TypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeName([NotNull] VeeParser.TypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarations([NotNull] VeeParser.DeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarations([NotNull] VeeParser.DeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>scalarExtraction</c>
	/// labeled alternative in <see cref="VeeParser.extraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalarExtraction([NotNull] VeeParser.ScalarExtractionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>scalarExtraction</c>
	/// labeled alternative in <see cref="VeeParser.extraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalarExtraction([NotNull] VeeParser.ScalarExtractionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>tupleExtraction</c>
	/// labeled alternative in <see cref="VeeParser.extraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleExtraction([NotNull] VeeParser.TupleExtractionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>tupleExtraction</c>
	/// labeled alternative in <see cref="VeeParser.extraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleExtraction([NotNull] VeeParser.TupleExtractionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>recordExtraction</c>
	/// labeled alternative in <see cref="VeeParser.extraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecordExtraction([NotNull] VeeParser.RecordExtractionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>recordExtraction</c>
	/// labeled alternative in <see cref="VeeParser.extraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecordExtraction([NotNull] VeeParser.RecordExtractionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlias([NotNull] VeeParser.AliasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlias([NotNull] VeeParser.AliasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] VeeParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] VeeParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.typeDefs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeDefs([NotNull] VeeParser.TypeDefsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.typeDefs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeDefs([NotNull] VeeParser.TypeDefsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VeeParser.typeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeDef([NotNull] VeeParser.TypeDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VeeParser.typeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeDef([NotNull] VeeParser.TypeDefContext context);
}
